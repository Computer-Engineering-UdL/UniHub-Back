name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'
      - name: Install uv
        run: pip install uv
      - name: Install dependencies
        run: uv pip install ruff --system
      - name: Lint with ruff
        run: ruff check .

  tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'

      - name: Install uv
        run: pip install uv

      - name: Install dependencies
        run: |
          uv pip compile pyproject.toml --extra dev -o requirements.txt
          uv pip sync --system requirements.txt

      - name: Run tests with coverage
        run: pytest -v --cov=. --cov-report=xml --cov-report=term-missing

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
          retention-days: 1

  build-and-push:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/uniroom-back:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Trigger n8n webhook
        run: >
          curl -X POST
          -u "${{ secrets.N8N_BASIC_AUTH_USER }}:${{ secrets.N8N_BASIC_AUTH_PASSWORD }}"
          -H "Content-Type: application/json"
          -d '{
            "repository": "${{ github.repository }}",
            "branch": "${{ github.ref_name }}",
            "commit_sha": "${{ github.sha }}",
            "commit_message": "${{ toJSON(github.event.head_commit.message) }}",
            "commit_author": "${{ github.event.head_commit.author.name }}",
            "commit_url": "${{ github.event.head_commit.url }}",
            "workflow": "${{ github.workflow }}",
            "run_id": "${{ github.run_id }}",
            "run_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
            "triggered_by": "${{ github.actor }}",
            "event_name": "${{ github.event_name }}"
          }'
          ${{ secrets.N8N_WEBHOOK_URL }}
